---
import type { CollectionEntry } from 'astro:content';

type Props = {
  article: CollectionEntry<'blog'>;
};

const { article } = Astro.props;

const dateOptions: Intl.DateTimeFormatOptions = {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
};

const formattedPublishDate = new Date(article.data.pubDate).toLocaleDateString(
  'en-US',
  dateOptions,
);
---

<div
  class="max-w-[300px] flex grow flex-col justify-center gradient-wrapper shadow-[35px_35px_100px_-15px_rgba(0,0,0,0.1)] shadow-text/10"
>
  <div
    class="flex flex-col h-[500px] max-h-[60vh] w-full bg-cover bg-center p-8 rounded-2xl justify-between"
  >
    <div class="flex flex-col gap-4">
      <a
        href={`/blog/${article.slug}`}
        class="block text-xl text-text dark:text-text hover:text-primary transition-colors"
      >
        {article.data.title}
      </a>

      <ul class="flex gap-2">
        {
          article.data.tags.map(tag => (
            <li class="text-xs border-primary border-solid border-[1px] text-primary px-2 py-1 rounded-lg uppercase">
              {tag}
            </li>
          ))
        }
      </ul>
    </div>

    <div class="mt-auto flex flex-col gap-2">
      <div class="flex gap-2 items-center">
        <img
          class="rounded-full w-8 h-8"
          src=`images/${article.data.authorImage}`
          alt={article.data.author}
        />
        <div>{article.data.author}</div>
      </div>

      <small class="text-gray-400 font-semibold"
        >on {formattedPublishDate}</small
      >
    </div>
  </div>
</div>
