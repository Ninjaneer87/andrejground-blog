---
const width = 900;
const height = 30000;
const verticalDistance = 300;
const numberOfCircles = height / verticalDistance;

const randomCircleCoords = (index: number) => {
  const cx = Math.floor(Math.random() * 700);
  const cy = index * verticalDistance;
  const fill =
    index % 2 === 0 ? 'rgb(var(--primary))' : 'rgb(var(--secondary))';
  const r = Math.floor(Math.random() * 100) + 160;
  return { cx, cy, fill, r };
};
---

<svg
  id="visual"
  viewBox="0 0 900 600"
  width={width}
  height={height}
  xmlns="http://www.w3.org/2000/svg"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="1.1"
>
  <rect x="0" y="0" width={width} height={height} fill="transparent"
  ></rect>
  <g>
    {
      Array.from({ length: numberOfCircles }).map((_, index) => {
        const { cx, cy, fill, r } = randomCircleCoords(index);
        return <circle fill={fill} r={r} cx={cx} cy={cy} />;
      })
    }
  </g>
</svg>

<style>
  svg {
    position: absolute;
    top: 0;
    max-height: 100vh;
    width: 100%;
    overflow: visible;
    filter: blur(6rem);
    pointer-events: none;
    z-index: -1;
  }
</style>
