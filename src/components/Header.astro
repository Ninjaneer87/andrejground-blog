---
import { COOKIE_KEYS } from '../constants';
import type { ColorPaletteOption, DarkModeOption } from '../stores/themeStore';
import LogoStatic from './LogoStatic.astro';
import DarkModePicker from './ui/DarkModePicker';
import PalettePicker from './ui/PalettePicker';

const pathname = new URL(Astro.request.url).pathname;

const links = [
  { href: '/', text: 'Home', isActive: pathname === '/' },
  { href: '/about', text: 'About', isActive: pathname.startsWith('/about') },
  {
    href: '/articles',
    text: 'Articles',
    isActive: pathname.startsWith('/articles'),
  },
];

const colorPaletteCookie = Astro.cookies.get(COOKIE_KEYS.selectedColorPalette);
const darkModeCookie = Astro.cookies.get(COOKIE_KEYS.selectedDarkMode);
---

<header class="flex gap-4 justify-between p-4 sticky top-0 z-10">
  <div class="container mx-auto flex justify-between bg-glass rounded-2xl p-4">
    <a href="/" class="flex gap-4 items-center">
      <LogoStatic />

      <span class="font-light text-xl">
        <span class="text-primary">Andrej</span><span class="text-text"
          >Ground</span
        >
      </span>
    </a>

    <ul class="flex items-center gap-4">
      {
        links.map(link => (
          <li>
            <a
              href={link.href}
              class={`p-2 ${link.isActive ? 'text-primary' : 'text-text'}`}
            >
              {link.text}
            </a>
          </li>
        ))
      }
    </ul>

    <div class="flex flex-col items-center gap-1">
      <DarkModePicker
        client:load
        initialDarkMode={darkModeCookie?.value as DarkModeOption}
      />
      <PalettePicker
        client:load
        initialPalette={colorPaletteCookie?.value as ColorPaletteOption}
      />
    </div>
  </div>
</header>
