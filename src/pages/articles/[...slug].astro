---
import RootLayout from '../../layouts/RootLayout.astro';
import Tags from '../../components/Tags.astro';
import Divider from '../../components/ui/Divider.astro';
import TOCModal from '../../components/ui/TOCModal.tsx';
import SocialsShare from '../../components/ui/SocialsShare.tsx';
import './article-styles.css';
import ScrollProgress from '../../components/ScrollProgress.astro';
import TableOfContentsReact from '../../components/TableOfContentsReact';
import AuthorCard from '../../components/cards/AuthorCard.astro';
import DateCard from '../../components/cards/DateCard.astro';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import TableOfContentsSkeleton from 'src/components/skeletons/TableOfContentsSkeleton.astro';

export async function getStaticPaths() {
  const allBlogArticles: CollectionEntry<'blog'>[] = (
    await getCollection('blog')
  ).filter(entry => !entry.data.isDraft);

  return allBlogArticles.map(entry => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
if (!entry) {
  return Astro.redirect('/404');
}

const { title, pubDate, author, tags } = entry.data;

const { Content } = await entry.render();
const currentPath = Astro.url.origin + Astro.url.pathname;
---

<style>
  .gradient-top::after {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    width: 50vw;
    height: 50vh;
    transform: translate(-50%, -50%);
    border-radius: 100vh;
    background: radial-gradient(
      circle,
      rgb(var(--primary) / 100%) 0%,
      rgb(var(--secondary)) 100% /* transparent 100% */
    );
    filter: blur(15vmin);
    z-index: -1;
  }
</style>

<RootLayout pageTitle={title}>
  <ScrollProgress />
  <div class="container mx-auto p-4 z-0 relative gradient-top">
    <div class="flex gap-4 xl:gap-24">
      <div class="hidden xl:block">
        <div class="flex-col gap-2 sticky top-[150px] w-74 max-w-74 p-4">
          <TableOfContentsReact client:only="react">
            <TableOfContentsSkeleton slot="fallback" />
          </TableOfContentsReact>
          <Divider />
          <AuthorCard author={author} />
          <DateCard date={pubDate} />
          <SocialsShare url={currentPath} client:only="react" />
        </div>

        <!-- This is a placeholder for sticky sidebar -->
        <div></div>
      </div>

      <section class="w-[768px] max-w-full pb-96 shrink max-xl:mx-auto">
        <h1 class="mb-16 max-w-screen-lg mx-auto">
          {title}
        </h1>
        <Divider />
        <Content />
        <Divider />
        <Tags tags={tags} />
      </section>
    </div>
  </div>

  <TOCModal client:only="react">
    <TableOfContentsReact client:only="react" />
    <Divider />
    <AuthorCard author={author} />
    <DateCard date={pubDate} />
    <SocialsShare url={currentPath} client:only="react" />
  </TOCModal>
</RootLayout>

<script src="../../scripts/articleCopyCode.ts"></script>
<script src="../../scripts/articleAddTooltip.tsx"></script>
