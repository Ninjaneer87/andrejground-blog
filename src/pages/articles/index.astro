---
import RootLayout from '../../layouts/RootLayout.astro';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';
import Filters from '../../components/Filters.tsx';
import ArticlesFilteredList from '../../components/ArticlesFilteredList.tsx';
import FiltersSkeleton from '../../components/skeletons/FiltersSkeleton.astro';
import ArticlesFilteredListSkeleton from '../../components/skeletons/ArticlesFilteredListSkeleton.astro';
import NoArticlesFound from '../../components/NoArticlesFound';

const allBlogArticles: CollectionEntry<'blog'>[] = (await getCollection('blog'))
  .filter(entry => !entry.data.isDraft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());

const uniqueTags = [
  ...new Set<string>(allBlogArticles.flatMap(article => article.data.tags)),
];

const uniqueAuthors = [
  ...new Set<string>(allBlogArticles.map(article => article.data.author)),
];
---

<RootLayout pageTitle="Articles">
  <div class="container mx-auto flex max-md:flex-col gap-8 pt-20 p-4">
    <div>
      <div class="md:sticky md:top-[200px] md:w-[320px] max-w-full">
        <Filters
          client:only="react"
          tags={uniqueTags}
          authors={uniqueAuthors}
          allBlogArticles={allBlogArticles}
        >
          <FiltersSkeleton slot="fallback" />
        </Filters>
      </div>
      <div></div>
    </div>

    <ArticlesFilteredList client:only="react">
      <ArticlesFilteredListSkeleton slot="fallback" />
    </ArticlesFilteredList>

    <NoArticlesFound client:only="react" />
  </div>
</RootLayout>
