---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { getCollection } from 'astro:content';
import ArticleCard from 'src/components/cards/ArticleCard.astro';
import SocialLinkCard from 'src/components/cards/SocialLinkCard.astro';
import PageHeader from 'src/components/PageHeader.astro';
import Divider from 'src/components/ui/Divider.astro';
import { AUTHORS } from 'src/constants';
import RootLayout from 'src/layouts/RootLayout.astro';

export async function getStaticPaths() {
  const allBlogArticles: CollectionEntry<'blog'>[] = (
    await getCollection('blog')
  ).filter(entry => !entry.data.isDraft);

  return allBlogArticles.map(entry => ({
    params: { slug: entry.data.author },
    props: { author: AUTHORS[entry.data.author] },
  }));
}

const { author } = Astro.props;
if (!author) {
  return Astro.redirect('/404');
}

const authorArticles: CollectionEntry<'blog'>[] = (await getCollection('blog'))
  .filter(
    article => article.data.author === author.slug && !article.data.isDraft,
  )
  .sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

const { description, image, name, position, socialLinks } = author;
---

<RootLayout pageTitle=`Authors | ${name}`>
  <h1 class="sr-only">Author - {name}</h1>

  <PageHeader
    words={['AndrejGround', 'Author']}
    desc="Meet and see the articles by this author"
  />

  <Divider />

  <div class="container mx-auto p-4 relative">
    <div class="flex gap-4 md:gap-16 items-center max-md:justify-center mb-8">
      <Image
        class="rounded-full mb-4 flex shrink max-md:w-20"
        src=`/images/${image}`
        alt={name}
        width={200}
        height={200}
      />
      <div class="rounded-2xl">
        <div class="font-thin italic">Articles by</div>
        <h2 class="font-thin">{name}</h2>
        <div class="opacity-70 flex flex-col gap-2">
          <div>{position}</div>
          <div>{description}</div>
        </div>
      </div>
    </div>

    <ul class="flex flex-wrap gap-4 max-md:justify-center">
      {socialLinks.map(link => <SocialLinkCard {...link} />)}
    </ul>

    <Divider />

    <ul class="flex gap-4 md:gap-16 items-center flex-wrap max-md:justify-center">
      {authorArticles.map(article => <ArticleCard article={article} />)}
    </ul>
  </div>
</RootLayout>
